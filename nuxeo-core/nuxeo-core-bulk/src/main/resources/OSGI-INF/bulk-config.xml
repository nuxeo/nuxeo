<?xml version="1.0"?>
<component name="org.nuxeo.ecm.core.bulk.config" version="1.0.0">

  <require>org.nuxeo.runtime.stream.service</require>

  <!-- ======================================================================================= -->
  <!-- Ensure backward/forward compatibility by registering schema evolution -->
  <extension point="schema" target="org.nuxeo.runtime.avro">
    <schema name="Record-10.10-HF01" file="avro/Record-0x77EACC1CE6E293FB.avsc " />
    <schema name="BulkCommand-10.10-HF38" file="avro/BulkCommand-0xC6615A90942CA30B.avsc" />
    <schema name="BulkStatus-10.10-HF38" file="avro/BulkStatus-0xD8A0F490388FE2A7.avsc" />
    <schema name="BulkStatus-10.10-HF54" file="avro/BulkStatus-0x26CF42CFBF261FBD.avsc" />
    <schema name="DataBucket-10.10-HF01" file="avro/DataBucket-0xB62494C74E419198.avsc" />
  </extension>

  <!-- ======================================================================================= -->
  <!-- Bulk Service configuration -->

  <!-- Initialize bulk service streams before action processors -->
  <extension point="logConfig" target="org.nuxeo.runtime.stream.service">
    <logConfig name="bulk">
      <!-- command stream size sets the maximum concurrency for the scroller computation in the Nuxeo cluster -->
      <log name="command" size="2" />
      <!-- status stream size sets the maximum concurrency for the status computation in the Nuxeo cluster -->
      <log name="status" size="1" />
      <!-- done stream size sets the maximum concurrency for the triggers computations -->
      <log name="done" size="1" />
    </logConfig>
  </extension>

  <!-- Configure the bulk service processor for this instance, we are using the configuration service -->
  <!-- because the bulk processor is initialized manually after the Stream service has started the action processors -->
  <extension target="org.nuxeo.runtime.ConfigurationService" point="configuration">
    <!-- Scroll computation -->
    <property name="nuxeo.core.bulk.scroller.continueOnFailure">false</property>
    <property name="nuxeo.core.bulk.scroller.concurrency">2</property>
    <property name="nuxeo.core.bulk.scroller.scroll.size">200</property>
    <property name="nuxeo.core.bulk.scroller.scroll.keepAliveSeconds">60</property>
    <property name="nuxeo.core.bulk.scroller.transactionTimeout">2d</property>
    <property name="nuxeo.core.bulk.scroller.produceImmediate">false</property>
    <!-- Status computation -->
    <property name="nuxeo.core.bulk.status.continueOnFailure">false</property>
    <property name="nuxeo.core.bulk.status.maxRetries">3</property>
    <property name="nuxeo.core.bulk.status.delayMillis">1000</property>
    <property name="nuxeo.core.bulk.status.maxDelayMillis">10000</property>
    <property name="nuxeo.core.bulk.status.concurrency">1</property>
  </extension>


  <!-- ======================================================================================= -->
  <!-- Actions configuration -->

  <extension target="org.nuxeo.ecm.core.bulk" point="actions">
    <!-- Internal -->
    <action name="trash" bucketSize="100" batchSize="25" sequentialCommands="true" />
    <action name="removeProxy" bucketSize="100" batchSize="25" />
    <action name="setSystemProperties" bucketSize="100" batchSize="25" />
    <!-- Exposed through REST API -->
    <action name="setProperties" bucketSize="100" batchSize="25" httpEnabled="true"
      validationClass="org.nuxeo.ecm.core.bulk.validation.SetPropertiesValidation"/>
  </extension>

  <!-- Action's processor -->
  <extension target="org.nuxeo.runtime.stream.service" point="streamProcessor">
    <!-- SetProperty processor -->
    <streamProcessor name="setProperties" class="org.nuxeo.ecm.core.bulk.action.SetPropertiesAction" logConfig="bulk"
      defaultConcurrency="${nuxeo.bulk.action.setProperties.defaultConcurrency:=2}"
      defaultPartitions="${nuxeo.bulk.action.setProperties.defaultPartitions:=2}">
      <policy name="default" maxRetries="3" delay="500ms" maxDelay="10s" continueOnFailure="false" />
    </streamProcessor>

    <!-- SetSystemProperty processor -->
    <streamProcessor name="setSystemProperties" class="org.nuxeo.ecm.core.bulk.action.SetSystemPropertiesAction"
      logConfig="bulk" defaultConcurrency="${nuxeo.bulk.action.setSystemProperties.defaultConcurrency:=2}"
      defaultPartitions="${nuxeo.bulk.action.setSystemProperties.defaultPartitions:=2}">
      <policy name="default" maxRetries="3" delay="500ms" maxDelay="10s" continueOnFailure="false" />
    </streamProcessor>

    <!-- RemoveProxy processor -->
    <streamProcessor name="removeProxy" class="org.nuxeo.ecm.core.bulk.action.RemoveProxyAction" logConfig="bulk"
      defaultConcurrency="${nuxeo.bulk.action.removeProxy.defaultConcurrency:=2}"
      defaultPartitions="${nuxeo.bulk.action.removeProxy.defaultPartitions:=2}">
      <policy name="default" maxRetries="3" delay="500ms" maxDelay="10s" continueOnFailure="false" />
    </streamProcessor>

    <!-- Trash processor -->
    <streamProcessor name="trash" class="org.nuxeo.ecm.core.bulk.action.TrashAction" logConfig="bulk"
      defaultConcurrency="${nuxeo.bulk.action.trash.defaultConcurrency:=1}"
      defaultPartitions="${nuxeo.bulk.action.trash.defaultPartitions:=1}">
      <policy name="default" maxRetries="3" delay="500ms" maxDelay="10s" continueOnFailure="false" />
    </streamProcessor>

  </extension>

</component>
