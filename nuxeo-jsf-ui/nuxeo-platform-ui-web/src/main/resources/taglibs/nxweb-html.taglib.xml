<?xml version="1.0" encoding="UTF-8"?>

<facelet-taglib id="nxh" xmlns="http://xmlns.jcp.org/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-facelettaglibrary_2_2.xsd"
  version="2.2">
  <description>
    <![CDATA[
    <p>Nuxeo HTML Taglib Override</p>
    <p>
      This JSF library works as a wrapper of the standard HTML tag library to
      improve default tags behaviour.
    </p>
    ]]>
  </description>
  <namespace>http://nuxeo.org/nxweb/html</namespace>

  <tag>
    <tag-name>dataTable</tag-name>
    <component>
      <component-type>javax.faces.HtmlDataTable</component-type>
      <renderer-type>javax.faces.Table</renderer-type>
      <handler-class>org.nuxeo.ecm.platform.ui.web.tag.handler.GenericHtmlComponentHandler</handler-class>
    </component>
    <description>
      Same behavior and configuration than original JSF tag, but accepts an additional defaultValue attribute.
    </description>
    <attribute>
      <name>defaultValue</name>
      <required>false</required>
      <type>java.lang.Object</type>
      <description>
        Value used instead of the value attribute, when it resolves to null or
        empty.
      </description>
    </attribute>
  </tag>

  <tag>
    <tag-name>column</tag-name>
    <component>
      <component-type>javax.faces.Column</component-type>
      <handler-class>org.nuxeo.ecm.platform.ui.web.tag.handler.GenericHtmlComponentHandler</handler-class>
    </component>
    <description>
      Same behavior and configuration than original JSF tag, but accepts an additional defaultValue attribute.
    </description>
    <attribute>
      <name>defaultValue</name>
      <required>false</required>
      <type>java.lang.Object</type>
      <description>
        Value used instead of the value attribute, when it resolves to null or
        empty.
      </description>
    </attribute>
  </tag>

  <tag>
    <tag-name>commandButton</tag-name>
    <component>
      <component-type>javax.faces.HtmlCommandButton</component-type>
      <renderer-type>javax.faces.Button</renderer-type>
      <handler-class>org.nuxeo.ecm.platform.ui.web.tag.handler.MetaActionSourceTagHandler</handler-class>
    </component>
    <description>
      <![CDATA[
      <p>
        Same configuration than original JSF tag, but handles double resolution
        of the action expression.
      </p>
      <p>
        All usual h:commandButton attributes are accepted here. The tag
        specificity is that it can invoke a method binding which is the result
        of the given method binding.
      </p>
      <p>
        This useful when using this tag with a Nuxeo action, for instance:
        they can be configured to hold method bindings as a link like
        "#{documentAction.createDocument('Domain')}". This information can be
        accessed in a page via "#{action.getLink()}". The nxh:commandButton tag
        will not consider this as a string, but will detect this is still an
        expression, and will invoke the corresponding method binding by
        resolving it again.
      </p>
      Example:
      <pre>
        &lt;nxh:commandButton value="#{action.label}" action="#{action.getLink()}" /&gt;
      </pre>
      ]]>
    </description>
  </tag>

  <tag>
    <tag-name>commandLink</tag-name>
    <component>
      <component-type>javax.faces.HtmlCommandLink</component-type>
      <renderer-type>javax.faces.Link</renderer-type>
      <handler-class>org.nuxeo.ecm.platform.ui.web.tag.handler.MetaActionSourceTagHandler</handler-class>
    </component>
    <description>
      <![CDATA[
      <p>
        Same configuration than original JSF tag, but handles double resolution
        of the action expression.
      </p>
      <p>
        All usual h:commandLink attributes are accepted here. The tag
        specificity is that it can invoke a method binding which is the result
        of the given method binding.
      </p>
      <p>
        This useful when using this tag with a Nuxeo action, for instance:
        they can be configured to hold method bindings as a link like
        "#{documentAction.createDocument('Domain')}". This information can be
        accessed in a page via "#{action.getLink()}". The nxh:commandLink tag
        will not consider this as a string, but will detect this is still an
        expression, and will invoke the corresponding method binding by
        resolving it again.
      </p>
      Example:
      <pre>
        &lt;nxh:commandLink value="#{action.label}" action="#{action.getLink()}" /&gt;
      </pre>
      ]]>
    </description>
  </tag>

  <tag>
    <tag-name>form</tag-name>
    <component>
      <component-type>javax.faces.HtmlForm</component-type>
      <renderer-type>javax.faces.Form</renderer-type>
      <handler-class>org.nuxeo.ecm.platform.ui.web.tag.handler.GenericHtmlComponentHandler</handler-class>
    </component>
    <description>
      Same behavior and configuration than original JSF tag, but accepts an additional defaultValue attribute.
    </description>
    <attribute>
      <name>defaultValue</name>
      <required>false</required>
      <type>java.lang.Object</type>
      <description>
        Value used instead of the value attribute, when it resolves to null or
        empty.
      </description>
    </attribute>
  </tag>

  <tag>
    <tag-name>graphicImage</tag-name>
    <component>
      <component-type>javax.faces.HtmlGraphicImage</component-type>
      <renderer-type>javax.faces.NXImage</renderer-type>
      <handler-class>org.nuxeo.ecm.platform.ui.web.tag.handler.GenericHtmlComponentHandler</handler-class>
    </component>
    <description>
      <![CDATA[
      <p>
        Same behavior and configuration than original JSF tag, but accepts
        an additional defaultValue attribute.
      </p>
      <p>
        Also uses a renderer that does not display an empty "img" tag when the
        resolved image is empty, as well as empty width and height attributes (as
        it's an issue for IE).
      </p>
      ]]>
    </description>
    <attribute>
      <name>defaultValue</name>
      <required>false</required>
      <type>java.lang.Object</type>
      <description>
        Value used instead of the value attribute, when it resolves to null or
        empty.
      </description>
    </attribute>
  </tag>

  <tag>
    <tag-name>inputHidden</tag-name>
    <component>
      <component-type>javax.faces.HtmlInputHidden</component-type>
      <renderer-type>javax.faces.Hidden</renderer-type>
      <handler-class>org.nuxeo.ecm.platform.ui.web.tag.handler.GenericHtmlComponentHandler</handler-class>
    </component>
    <description>
      Same behavior and configuration than original JSF tag, but accepts an additional defaultValue attribute.
    </description>
    <attribute>
      <name>defaultValue</name>
      <required>false</required>
      <type>java.lang.Object</type>
      <description>
        Value used instead of the value attribute, when it resolves to null or
        empty.
      </description>
    </attribute>
  </tag>

  <tag>
    <tag-name>inputSecret</tag-name>
    <component>
      <component-type>javax.faces.HtmlInputSecret</component-type>
      <renderer-type>javax.faces.Secret</renderer-type>
      <handler-class>org.nuxeo.ecm.platform.ui.web.tag.handler.GenericHtmlComponentHandler</handler-class>
    </component>
    <description>
      Same behavior and configuration than original JSF tag, but accepts an additional defaultValue attribute.
    </description>
    <attribute>
      <name>defaultValue</name>
      <required>false</required>
      <type>java.lang.Object</type>
      <description>
        Value used instead of the value attribute, when it resolves to null or
        empty.
      </description>
    </attribute>
  </tag>

  <tag>
    <tag-name>inputText</tag-name>
    <component>
      <component-type>javax.faces.HtmlInputText</component-type>
      <renderer-type>javax.faces.Text</renderer-type>
      <handler-class>org.nuxeo.ecm.platform.ui.web.tag.handler.GenericHtmlComponentHandler</handler-class>
    </component>
    <description>
      Same behavior and configuration than original JSF tag, but accepts an additional defaultValue attribute.
    </description>
    <attribute>
      <name>defaultValue</name>
      <required>false</required>
      <type>java.lang.Object</type>
      <description>
        Value used instead of the value attribute, when it resolves to null or
        empty.
      </description>
    </attribute>
  </tag>

  <tag>
    <tag-name>inputTextarea</tag-name>
    <component>
      <component-type>javax.faces.HtmlInputTextarea</component-type>
      <renderer-type>javax.faces.Textarea</renderer-type>
      <handler-class>org.nuxeo.ecm.platform.ui.web.tag.handler.GenericHtmlComponentHandler</handler-class>
    </component>
    <description>
      Same behavior and configuration than original JSF tag, but accepts an additional defaultValue attribute.
    </description>
    <attribute>
      <name>defaultValue</name>
      <required>false</required>
      <type>java.lang.Object</type>
      <description>
        Value used instead of the value attribute, when it resolves to null or
        empty.
      </description>
    </attribute>
  </tag>

  <tag>
    <tag-name>message</tag-name>
    <component>
      <component-type>javax.faces.HtmlMessage</component-type>
      <renderer-type>javax.faces.Message</renderer-type>
      <handler-class>com.sun.faces.facelets.tag.jsf.html.HtmlComponentHandler</handler-class>
    </component>
    <description>
      Same behavior and configuration than original JSF tag, but accepts and
      additional escape attribute.
    </description>
    <attribute>
      <name>escape</name>
      <required>false</required>
      <type>java.lang.Boolean</type>
      <description>
        Boolean value stating if message should be escaped (useful to display
        feedback messages holding HTML tags, defaults to true).
      </description>
    </attribute>
  </tag>

  <tag>
    <tag-name>messages</tag-name>
    <component>
      <component-type>javax.faces.HtmlMessages</component-type>
      <renderer-type>javax.faces.NXMessages</renderer-type>
      <handler-class>com.sun.faces.facelets.tag.jsf.html.HtmlComponentHandler</handler-class>
    </component>
    <description>
      Same configuration than original JSF tag, but displays messages using
      the jQuery Ambiance library.
    </description>
  </tag>

  <tag>
    <tag-name>outputFormat</tag-name>
    <component>
      <component-type>javax.faces.HtmlOutputFormat</component-type>
      <renderer-type>javax.faces.Format</renderer-type>
      <handler-class>org.nuxeo.ecm.platform.ui.web.tag.handler.GenericHtmlComponentHandler</handler-class>
    </component>
    <description>
      Same behavior and configuration than original JSF tag, but accepts an additional defaultValue attribute.
    </description>
    <attribute>
      <name>defaultValue</name>
      <required>false</required>
      <type>java.lang.Object</type>
      <description>
        Value used instead of the value attribute, when it resolves to null or
        empty.
      </description>
    </attribute>
  </tag>

  <tag>
    <tag-name>outputLabel</tag-name>
    <component>
      <component-type>javax.faces.HtmlOutputLabel</component-type>
      <renderer-type>javax.faces.Label</renderer-type>
      <handler-class>org.nuxeo.ecm.platform.ui.web.tag.handler.GenericHtmlComponentHandler</handler-class>
    </component>
    <description>
      Same behavior and configuration than original JSF tag, but accepts an additional defaultValue attribute.
    </description>
    <attribute>
      <name>defaultValue</name>
      <required>false</required>
      <type>java.lang.Object</type>
      <description>
        Value used instead of the value attribute, when it resolves to null or
        empty.
      </description>
    </attribute>
  </tag>

  <tag>
    <tag-name>outputLink</tag-name>
    <component>
      <component-type>javax.faces.HtmlOutputLink</component-type>
      <renderer-type>javax.faces.Link</renderer-type>
      <handler-class>org.nuxeo.ecm.platform.ui.web.tag.handler.GenericHtmlComponentHandler</handler-class>
    </component>
    <description>
      Same behavior and configuration than original JSF tag, but accepts an additional defaultValue attribute.
    </description>
    <attribute>
      <name>defaultValue</name>
      <required>false</required>
      <type>java.lang.Object</type>
      <description>
        Value used instead of the value attribute, when it resolves to null or
        empty.
      </description>
    </attribute>
  </tag>

  <tag>
    <tag-name>metaOutputLink</tag-name>
    <component>
      <component-type>javax.faces.HtmlOutputLink</component-type>
      <renderer-type>javax.faces.Link</renderer-type>
      <handler-class>org.nuxeo.ecm.platform.ui.web.tag.handler.MetaValueHolderTagHandler</handler-class>
    </component>
    <description>
      <![CDATA[
      <p>
        Same configuration than original JSF tag, but handles double resolution
        of the link value.
      </p>
      <p>
        All usual h:outputLink attributes are accepted here. The tag
        specificity is that it can resolve the value again if the first
        resolution gives an expression.
      </p>
      <p>
        This is useful when working with Nuxeo actions, for instance, where
        the action link can itself be an expression.
      </p>
      Example:
      <pre>
        &lt;nxh:metaOutputLink value="#{action.link}" /&gt;
      </pre>
      ]]>
    </description>
  </tag>

  <tag>
    <tag-name>outputText</tag-name>
    <component>
      <component-type>javax.faces.HtmlOutputText</component-type>
      <renderer-type>javax.faces.Text</renderer-type>
      <handler-class>org.nuxeo.ecm.platform.ui.web.tag.handler.MetaValueHolderTagHandler</handler-class>
    </component>
    <description>
      <![CDATA[
      <p>
        Same configuration than original JSF tag, but handles double resolution
        of the value.
      </p>
      <p>
        All usual h:outputText attributes are accepted here. The tag
        specificity is that it can resolve the value again if the first
        resolution gives an expression.
      </p>
      <p>
        This is useful when working with Nuxeo actions, for instance, where
        the action properties can themselves be expressions.
      </p>
      Example:
      <pre>
        &lt;nxh:outputText value="#{action.label}" /&gt;
      </pre>
      ]]>
    </description>
  </tag>

  <tag>
    <tag-name>panelGrid</tag-name>
    <component>
      <component-type>javax.faces.HtmlPanelGrid</component-type>
      <renderer-type>javax.faces.Grid</renderer-type>
      <handler-class>org.nuxeo.ecm.platform.ui.web.tag.handler.GenericHtmlComponentHandler</handler-class>
    </component>
    <description>
      Same behavior and configuration than original JSF tag, but accepts an additional defaultValue attribute.
    </description>
    <attribute>
      <name>defaultValue</name>
      <required>false</required>
      <type>java.lang.Object</type>
      <description>
        Value used instead of the value attribute, when it resolves to null or
        empty.
      </description>
    </attribute>
  </tag>

  <tag>
    <tag-name>panelGroup</tag-name>
    <component>
      <component-type>javax.faces.HtmlPanelGroup</component-type>
      <renderer-type>javax.faces.Group</renderer-type>
      <handler-class>org.nuxeo.ecm.platform.ui.web.tag.handler.GenericHtmlComponentHandler</handler-class>
    </component>
    <description>
      Same behavior and configuration than original JSF tag, but accepts an additional defaultValue attribute.
    </description>
    <attribute>
      <name>defaultValue</name>
      <required>false</required>
      <type>java.lang.Object</type>
      <description>
        Value used instead of the value attribute, when it resolves to null or
        empty.
      </description>
    </attribute>
  </tag>

  <tag>
    <tag-name>selectBooleanCheckbox</tag-name>
    <component>
      <component-type>javax.faces.HtmlSelectBooleanCheckbox</component-type>
      <renderer-type>javax.faces.NXCheckbox</renderer-type>
      <handler-class>org.nuxeo.ecm.platform.ui.web.tag.handler.GenericHtmlComponentHandler</handler-class>
    </component>
    <description>
      Same behavior and configuration than original JSF tag, but accepts an additional defaultValue attribute.
    </description>
    <description>
      <![CDATA[
      <p>
        Same behavior and configuration than original JSF tag, but accepts an
        additional defaultValue attribute.
      </p>
      <p>
        Also uses a specific renderer to handle correctly potential converters
        set on this tag.
      </p>
      ]]>
    </description>
    <attribute>
      <name>defaultValue</name>
      <required>false</required>
      <type>java.lang.Object</type>
      <description>
        Value used instead of the value attribute, when it resolves to null or
        empty.
      </description>
    </attribute>
  </tag>

  <tag>
    <tag-name>selectManyCheckbox</tag-name>
    <component>
      <component-type>javax.faces.HtmlSelectManyCheckbox</component-type>
      <renderer-type>javax.faces.Checkbox</renderer-type>
      <handler-class>org.nuxeo.ecm.platform.ui.web.tag.handler.GenericHtmlComponentHandler</handler-class>
    </component>
    <description>
      Same behavior and configuration than original JSF tag, but accepts an additional defaultValue attribute.
    </description>
    <attribute>
      <name>defaultValue</name>
      <required>false</required>
      <type>java.lang.Object</type>
      <description>
        Value used instead of the value attribute, when it resolves to null or
        empty.
      </description>
    </attribute>
  </tag>

  <tag>
    <tag-name>selectManyListbox</tag-name>
    <component>
      <component-type>javax.faces.HtmlSelectManyListbox</component-type>
      <renderer-type>javax.faces.Listbox</renderer-type>
      <handler-class>org.nuxeo.ecm.platform.ui.web.tag.handler.GenericHtmlComponentHandler</handler-class>
    </component>
    <description>
      Same behavior and configuration than original JSF tag, but accepts an additional defaultValue attribute.
    </description>
    <attribute>
      <name>defaultValue</name>
      <required>false</required>
      <type>java.lang.Object</type>
      <description>
        Value used instead of the value attribute, when it resolves to null or
        empty.
      </description>
    </attribute>
  </tag>

  <tag>
    <tag-name>selectManyMenu</tag-name>
    <component>
      <component-type>javax.faces.HtmlSelectManyMenu</component-type>
      <renderer-type>javax.faces.Menu</renderer-type>
      <handler-class>org.nuxeo.ecm.platform.ui.web.tag.handler.GenericHtmlComponentHandler</handler-class>
    </component>
    <description>
      Same behavior and configuration than original JSF tag, but accepts an additional defaultValue attribute.
    </description>
    <attribute>
      <name>defaultValue</name>
      <required>false</required>
      <type>java.lang.Object</type>
      <description>
        Value used instead of the value attribute, when it resolves to null or
        empty.
      </description>
    </attribute>
  </tag>

  <tag>
    <tag-name>selectOneListbox</tag-name>
    <component>
      <component-type>javax.faces.HtmlSelectOneListbox</component-type>
      <renderer-type>javax.faces.Listbox</renderer-type>
      <handler-class>org.nuxeo.ecm.platform.ui.web.tag.handler.GenericHtmlComponentHandler</handler-class>
    </component>
    <description>
      Same behavior and configuration than original JSF tag, but accepts an additional defaultValue attribute.
    </description>
    <attribute>
      <name>defaultValue</name>
      <required>false</required>
      <type>java.lang.Object</type>
      <description>
        Value used instead of the value attribute, when it resolves to null or
        empty.
      </description>
    </attribute>
  </tag>

  <tag>
    <tag-name>selectOneMenu</tag-name>
    <component>
      <component-type>javax.faces.HtmlSelectOneMenu</component-type>
      <renderer-type>javax.faces.Menu</renderer-type>
      <handler-class>org.nuxeo.ecm.platform.ui.web.tag.handler.GenericHtmlComponentHandler</handler-class>
    </component>
    <description>
      Same behavior and configuration than original JSF tag, but accepts an additional defaultValue attribute.
    </description>
    <attribute>
      <name>defaultValue</name>
      <required>false</required>
      <type>java.lang.Object</type>
      <description>
        Value used instead of the value attribute, when it resolves to null or
        empty.
      </description>
    </attribute>
  </tag>

  <tag>
    <tag-name>selectOneRadio</tag-name>
    <component>
      <component-type>javax.faces.HtmlSelectOneRadio</component-type>
      <renderer-type>javax.faces.Radio</renderer-type>
      <handler-class>org.nuxeo.ecm.platform.ui.web.tag.handler.GenericHtmlComponentHandler</handler-class>
    </component>
    <description>
      Same behavior and configuration than original JSF tag, but accepts an additional defaultValue attribute.
    </description>
    <attribute>
      <name>defaultValue</name>
      <required>false</required>
      <type>java.lang.Object</type>
      <description>
        Value used instead of the value attribute, when it resolves to null or
        empty.
      </description>
    </attribute>
  </tag>

</facelet-taglib>