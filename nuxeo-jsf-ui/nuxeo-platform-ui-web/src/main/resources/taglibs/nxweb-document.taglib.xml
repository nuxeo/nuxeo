<?xml version="1.0" encoding="UTF-8"?>

<facelet-taglib id="nxd" xmlns="http://xmlns.jcp.org/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-facelettaglibrary_2_2.xsd"
  version="2.2">
  <description>
    <![CDATA[
    <p>Nuxeo Document Taglib</p>
    <p>
      Defines tags and functions to handle Nuxeo Core documents.
    </p>
    ]]>
  </description>
  <namespace>http://nuxeo.org/nxweb/document</namespace>

  <function>
    <function-name>typeInfo</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>org.nuxeo.ecm.platform.types.adapter.TypeInfo
      typeInfo(org.nuxeo.ecm.core.api.DocumentModel)</function-signature>
    <description>
      Returns the document type information as defined in the TypeService extension point.
    </description>
  </function>

  <function>
    <function-name>typeLabel</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>java.lang.String
      typeLabel(org.nuxeo.ecm.core.api.DocumentModel)</function-signature>
    <description>
      Returns the document type label as defined in the TypeService extension point.
    </description>
  </function>

  <function>
    <function-name>typeView</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>java.lang.String
      typeView(org.nuxeo.ecm.core.api.DocumentModel,
      java.lang.String)
    </function-signature>
    <description>
      Returns the document type view as defined in the TypeService extension point.
    </description>
  </function>

  <function>
    <function-name>iconPath</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>java.lang.String
      iconPath(org.nuxeo.ecm.core.api.DocumentModel)
    </function-signature>
    <description>
      Returns the document "icon" path from the "common" schema. If not set,
      defaults to the corresponding document type icon, as defined in the
      TypeService extension point.
    </description>
  </function>

  <function>
    <function-name>iconExpandedPath</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>java.lang.String
      iconExpandedPath(org.nuxeo.ecm.core.api.DocumentModel)
    </function-signature>
    <description>
      Returns the document "icon-expanded" path from the "common" schema. If
      not set, defaults to the corresponding document type icon, as defined in
      the TypeService extension point.
    </description>
  </function>

  <function>
    <function-name>bigIconPath</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>java.lang.String
      bigIconPath(org.nuxeo.ecm.core.api.DocumentModel)
    </function-signature>
    <description>
      Returns the document type nig icon path as defined in the TypeService extension point.
    </description>
  </function>

  <function>
    <function-name>fileIconPath</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>java.lang.String
      fileIconPath(org.nuxeo.ecm.core.api.Blob)
    </function-signature>
    <description>
      Returns an icon path matching the mimetype of given blob.
    </description>
  </function>

  <function>
    <function-name>propertyPath</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>java.lang.String getPropertyPath(java.lang.String, int,
      java.lang.String)
    </function-signature>
    <description>
      Returns the property xpath given the property list name, the index and the sub property name.
    </description>
  </function>

  <function>
    <function-name>titleOrId</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>java.lang.String
      titleOrId(org.nuxeo.ecm.core.api.DocumentModel)
    </function-signature>
    <description>
      Returns the document title extracted from the "dublincore" schema, or the
      document id if this property value is empty.
    </description>
  </function>

  <function>
    <function-name>titleFromId</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>java.lang.String titleFromId(java.lang.String)</function-signature>
    <description>
      Returns the document title (or id if not filled) given a document id.
      Resolves the document in current repository session context.
    </description>
  </function>

  <function>
    <function-name>isDirty</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>boolean isDirty(org.nuxeo.ecm.core.api.DocumentModel)</function-signature>
    <description>
      Returns true if document model is dirty, or if dirty properties hold
      empty values. This is useful to check if the 'clear filter' button should
      be displayed on content views for instance.
    </description>
  </function>

  <function>
    <function-name>isDocumentModel</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>boolean isDocumentModel(java.lang.Object)</function-signature>
    <description>
      Returns true if given object is an instance of the Nuxeo Core
      org.nuxeo.ecm.core.api.DocumentModel interface.
    </description>
  </function>

  <function>
    <function-name>hasPermission</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>boolean
      hasPermission(org.nuxeo.ecm.core.api.DocumentModel,
      java.lang.String)
    </function-signature>
    <description>
      Returns true if the current user has the specified permission on the given document model.
    </description>
  </function>

  <function>
    <function-name>canModify</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>boolean canModify(org.nuxeo.ecm.core.api.DocumentModel)</function-signature>
    <description>
      Returns true if the current user has the Write permission on the document
      model, and if document is not archived.
    </description>
  </function>

  <function>
    <function-name>defaultValue</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>java.lang.Object defaultValue(java.lang.String,
      java.lang.String)
    </function-signature>
    <description>
      Returns the default value for given schema and field names: this is
      useful to set the "template" attribute of a nxu:inputList tag managing a
      document complex property.
    </description>
  </function>

  <function>
    <function-name>propertyDefaultValue</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>java.lang.Object defaultValue(java.lang.String)</function-signature>
    <description>
      Returns the default value for given property path: this is useful to set
      the "template" attribute of a nxu:inputList tag managing a document
      complex property.
    </description>
  </function>

  <function>
    <function-name>fileUrl</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>java.lang.String fileUrl(java.lang.String,
      org.nuxeo.ecm.core.api.DocumentModel, java.lang.String, java.lang.String)
    </function-signature>
    <description>
      Returns the restful URL for a blob, given a pattern name, a document,
      the blob property path and the filename value.
    </description>
  </function>

  <function>
    <function-name>bigFileUrl</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>java.lang.String
      bigFileUrl(org.nuxeo.ecm.core.api.DocumentModel, java.lang.String,
      java.lang.String)
    </function-signature>
    <description>
      Returns the restful URL for a blob, using the nxbigfile servlet, given a
      document, the blob property path and the filename value.
    </description>
  </function>

  <function>
    <function-name>fileDescription</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>java.lang.String fileDescription(
      org.nuxeo.ecm.core.api.DocumentModel,
      java.lang.String, java.lang.String,
      java.lang.String)
    </function-signature>
    <description>
      Returns the pretty-print description of a blob, including filename and
      size.
    </description>
  </function>

  <function>
    <function-name>complexFileUrl</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>java.lang.String complexFileUrl(java.lang.String,
      org.nuxeo.ecm.core.api.DocumentModel, int, java.lang.String)
    </function-signature>
    <description>
      Returns the restful URL for a blob stored inside the "files" multi-valued
      property, given a pattern, the document, its index inside the
      multi-valued property, and the filename value.
    </description>
  </function>

  <function>
    <function-name>complexFileUrl</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>java.lang.String complexFileUrl(java.lang.String,
      org.nuxeo.ecm.core.api.DocumentModel, java.lang.String, int,
      java.lang.String, java.lang.String)
    </function-signature>
    <description>
      Returns the restful URL for a blob stored inside a multi-valued property,
      given a pattern, the document, the multi-valued property path, the blob
      index inside the multi-valued property, the blob property name, and the
      filename value.
    </description>
  </function>

  <function>
    <function-name>documentUrl</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>java.lang.String
      documentUrl(org.nuxeo.ecm.core.api.DocumentModel)
    </function-signature>
    <description>
      Returns the default rest URL for a document.
    </description>
  </function>

  <function>
    <function-name>complexDocumentUrl</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>java.lang.String documentUrl(java.lang.String,
      org.nuxeo.ecm.core.api.DocumentModel, java.lang.String, java.util.Map,
      boolean)
    </function-signature>
    <description>
      Returns the rest URL for a document, given a pattern, the document, the
      view, a map of properties, and a boolean stating if link should be
      started in a new Seam conversation.
    </description>
  </function>

  <function>
    <function-name>liveEditDefaultUrl</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>java.lang.String
      liveEditUrl(org.nuxeo.ecm.core.api.DocumentModel)
    </function-signature>
    <description>
      Returns the nxedit:// URL to edit a document file attachement.
    </description>
  </function>

  <function>
    <function-name>liveEditUrl</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>java.lang.String
      liveEditUrl(org.nuxeo.ecm.core.api.DocumentModel,
      java.lang.String,
      java.lang.String, java.lang.String)
    </function-signature>
    <description>
      Returns the nxedit:// URL to edit a document providing schema, blob field
      and filename field names.
    </description>
  </function>

  <function>
    <function-name>liveCreateDefaultUrl</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>java.lang.String liveCreateUrl(java.lang.String)</function-signature>
    <description>
       Returns the nxedit:// URL to create a new document of type File
       given a mimetype.
    </description>
  </function>

  <function>
    <function-name>liveCreateUrl</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>java.lang.String liveCreateUrl(java.lang.String,
      java.lang.String,
      java.lang.String, java.lang.String, java.lang.String)
    </function-signature>
    <description>
      Returns the nxedit:// URL to create a new document with parameters:
      mimetype, doctype, schema, blob and filename field names.
    </description>
  </function>

  <function>
    <function-name>liveCreateFromTemplateDefaultUrl</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>java.lang.String
      liveCreateFromTemplateUrl(org.nuxeo.ecm.core.api.DocumentModel)
    </function-signature>
    <description>
      Returns the nxedit:// URL to creat a new document of type File reusing
      the content of the blob of the provided template DocumentModel (assumed
      to hold the "file" schema).
    </description>
  </function>

  <function>
    <function-name>liveCreateFromTemplateUrl</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>java.lang.String
      liveCreateFromTemplateUrl(org.nuxeo.ecm.core.api.DocumentModel,
      java.lang.String, java.lang.String, java.lang.String, java.lang.String,
      java.lang.String, java.lang.String)
    </function-signature>
    <description>
      Returns the nxedit:// URL to create a new document from template.
      Parameters are: template DocumentModel, template schema, template blob
      field, target document type, target schema, target, blob field name,
      target filename field.
    </description>
  </function>

  <function>
    <function-name>complexLiveEditUrl</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>java.lang.String
      complexLiveEditUrl(org.nuxeo.ecm.core.api.DocumentModel,
      java.lang.String,
      int, java.lang.String, java.lang.String)
    </function-signature>
    <description>
      Returns the nxedit:// URL to edit and existing document, given a document,
      a multi-valued property name, the index of the blob to edit inside this
      property, the blob property name, and the filename property name.
    </description>
  </function>

  <function>
    <function-name>availableLifeCycleTransitions</function-name>
    <function-class>org.nuxeo.ecm.platform.ui.web.tag.fn.DocumentModelFunctions</function-class>
    <function-signature>java.util.List
      getAvailableLifeCycleTransitions(java.lang.String,
      java.lang.String)
    </function-signature>
    <description>
      Returns all the available transitions to follow given a lifecycle name
      and current lifecycle state.
    </description>
  </function>

  <tag>
    <tag-name>documentLink</tag-name>
    <component>
      <component-type>javax.faces.HtmlCommandLink</component-type>
      <renderer-type>javax.faces.Link</renderer-type>
      <handler-class>
        org.nuxeo.ecm.platform.ui.web.tag.handler.DocumentLinkTagHandler
      </handler-class>
    </component>
    <description>
      <![CDATA[
      <p>
        Link to a document within the application using standard command link
        component and renderer.
      </p>
      <p>
        All usual command link attribute are accepted except value and action.
        Value is replaced by the title attribute value, and action is
        dynamically processed to retrun to the document view.
      </p>
      ]]>
    </description>
    <attribute>
      <name>document</name>
      <required>true</required>
      <type>org.nuxeo.ecm.core.api.DocumentModel</type>
      <description>The document model to link to</description>
    </attribute>
    <attribute>
      <name>title</name>
      <required>false</required>
      <type>java.lang.String</type>
      <description>Value for the command link component</description>
    </attribute>
    <attribute>
      <name>view</name>
      <required>false</required>
      <type>java.lang.String</type>
      <description>
        View id of the document to display when redirecting to it. This is the
        view configured in the document type definition.
      </description>
    </attribute>
  </tag>

  <tag>
    <tag-name>restDocumentLink</tag-name>
    <component>
      <component-type>
        org.nuxeo.ecm.platform.ui.web.component.document.RestDocumentLink
      </component-type>
      <renderer-type>
        org.nuxeo.ecm.platform.ui.web.component.document.RestDocumentLink
      </renderer-type>
      <handler-class>
        org.nuxeo.ecm.platform.ui.web.tag.handler.GenericHtmlComponentHandler
      </handler-class>
    </component>
    <description>
      <![CDATA[
      <p>
        Link to a document within the application using standard output link
        component and renderer.
      </p>
      <p>
        The main purpose of this tag is to provide restful (bookmarkable)
        navigation inside documents.
      </p>
      <p>
        All usual output link attributes are accepted except value. Sub tags
        "f:param" are taken into account to build the corresponding DocumentView
        and URL. Value is replaced a method binding that generates the correct
        rest URL.
      </p>
      ]]>
    </description>
    <attribute>
      <name>document</name>
      <required>true</required>
      <type>org.nuxeo.ecm.core.api.DocumentModel</type>
      <description>The document model to link to</description>
    </attribute>
    <attribute>
      <name>view</name>
      <required>false</required>
      <type>java.lang.String</type>
      <description>
        View id of the document to display when redirecting to it. This is the
        view configured in the document type definition.
      </description>
    </attribute>
    <attribute>
      <name>tab</name>
      <required>false</required>
      <type>java.lang.String</type>
      <description>
        The tab identifier to display as view of the document.
      </description>
    </attribute>
    <attribute>
      <name>subTab</name>
      <required>false</required>
      <type>java.lang.String</type>
      <description>
        The sub tab identifier to display as sub view of the document.
      </description>
    </attribute>
    <attribute>
      <name>tabsIds</name>
      <required>false</required>
      <type>java.lang.String</type>
      <description>
      <![CDATA[
        The list of tab ids to select as current tab actions. List is encoded as
        a String separated by the comma ',' character, and each each action
        information looks like:
        CATEGORY:ACTION_ID[:OPTIONAL_SUB_ACTION_ID[:OPTIONAL_SUB_ACTION_ID]...]
        <p>
          If category is omitted or empty, the category {@link
          #DEFAULT_TABS_CATEGORY} will be used (if there is no subtab
          information).
        </p>
        <p>
          If no action id is given, the corresponding category is reset (for
          instance using 'CATEGORY:').
        </p>
        <p>
          If the action information is '*:', all categories will be reset.
        </p>
        <p>
          The resulting string looks like:
          CATEGORY_1:ACTION_ID_1,CATEGORY_2:ACTION_ID_2_SUB_ACTION_ID_2,...
        </p>
      ]]>
      </description>
    </attribute>
    <attribute>
      <name>pattern</name>
      <required>false</required>
      <type>java.lang.String</type>
      <description>
        The pattern name to use to generate the url (according to the url
        service configuration).
      </description>
    </attribute>
    <attribute>
      <name>newConversation</name>
      <required>false</required>
      <type>java.lang.Boolean</type>
      <description>
        Boolean stating if page should be opened in a new conversation. If set
        to, no conversation information will be added to the URL so that a new
        conversation is created. Defaults to false.
      </description>
    </attribute>
    <attribute>
      <name>baseURL</name>
      <required>false</required>
      <type>java.lang.String</type>
      <description>
        String stating the server base URL to use (http://localhost:8080/nuxeo for instance).
        Defaults to the current server page displaying the URL if not filled.
      </description>
    </attribute>
    <attribute>
      <name>addTabInFo</name>
      <required>false</required>
      <type>java.lang.Boolean</type>
      <description>
        Boolean stating if the default tab information should be added to the
        generated URL. Default tab information is used to reset current tab
        value.
      </description>
    </attribute>
    <attribute>
      <name>var</name>
      <required>false</required>
      <type>java.lang.String</type>
      <description>
        String used as variable name to expose the built URL when using
        attribute resolveOnly set to true. Available since 5.7.
      </description>
    </attribute>
    <attribute>
      <name>resolveOnly</name>
      <required>false</required>
      <type>java.lang.Boolean</type>
      <description>
        Boolean used to state that the built URL should be exposed in the
        context (using the "var" attribute value) instead of displaying the
        resulting link. This is useful to benefit from the tag features when
        building complex document URLs. Defaults to false, available since 5.7.
      </description>
    </attribute>
  </tag>

</facelet-taglib>
