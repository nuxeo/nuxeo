<?xml version="1.0"?>

<component name="org.nuxeo.ecm.platform.webapp.base.properties">

  <extension target="org.nuxeo.runtime.ConfigurationService" point="configuration">
    <documentation>
      Properties controlling Drag&amp;Drop behaviors:
      <ul>
        <li>org.nuxeo.dnd.upload.timeout: maximum time for uploading a file via
          Drag&amp;Drop to the server.</li>
        <li>org.nuxeo.dnd.exec.timeout: maximum time for executing import of
          files uploaded via Drag&amp;and Drop</li>
        <li>org.nuxeo.dnd.extendedmode.timeout: mouse over time before switching
          to extended mode UI (setting to -1 disables the extended mode)</li>
      </ul>
    </documentation>
    <property name="org.nuxeo.dnd.upload.timeout">30000</property>
    <property name="org.nuxeo.dnd.exec.timeout">30000</property>
    <property name="org.nuxeo.dnd.extendedmode.timeout">2000</property>
  </extension>

  <extension target="org.nuxeo.runtime.ConfigurationService" point="configuration">
    <documentation>
      <strong>nuxeo.jsf.useAjaxTabs</strong>: enables ajaxified tabs on document views. Activation also relies on
      the user's browser because this feature requires manipulating the browser's session history in JavaScript to
      preserve bookmarkable URLs (see compatibility table at
      <a href="http://caniuse.com/#search=pushstate" target="_blank">http://caniuse.com/#search=pushstate</a>, for
      instance).
    </documentation>
    <property name="nuxeo.jsf.useAjaxTabs">true</property>
  </extension>

  <extension target="org.nuxeo.runtime.ConfigurationService" point="configuration">
    <documentation>
      <strong>nuxeo.jsf.ajax.disableErrorFeedback</strong>: disables JavaScript hook displaying
      an error message in the JSF UI when an empty response is received from server.
      Disabling this hook is not recommended, but this can be useful on a slow server
      when users do not want to see this message on some concurrent requests (when
      server is down, no message will be displayed on Ajax actions).
    </documentation>
    <property name="nuxeo.jsf.ajax.disableErrorFeedback">false</property>
  </extension>

  <extension target="org.nuxeo.runtime.ConfigurationService" point="configuration">
    <documentation>
      Properties controlling resources management:
      <ul>
        <li><strong>nuxeo.jsf.combinePageResources</strong>: serve all js and CSS resources
            of a page with a single request (instead of bundle by bundle)</li>
        <li><strong>nuxeo.jsf.deferJavaScriptLoading</strong>: move all JavaScript resources
            at the end of the page. WARNING - enabling this might break
            some inline JavaScript code behaviors.</li>
      </ul>
    </documentation>
    <property name="nuxeo.jsf.combinePageResources">true</property>
    <property name="nuxeo.jsf.deferJavaScriptLoading">true</property>
  </extension>

  <extension target="org.nuxeo.runtime.ConfigurationService" point="configuration">
    <documentation>
      Controls whether iterations in document listings are done
      using build-time tag c:forEach or render-time tag ui:repeat (which is much
      more efficient on large content).

      Using render-time iterations may break
      some behaviours, this property is mainly useful for backport of
      optimizations on maintenance branches.

      @since 8.2
    </documentation>
    <property name="nuxeo.jsf.listings.useRepeatRenderTime">true</property>
  </extension>

  <extension target="org.nuxeo.runtime.ConfigurationService" point="configuration">
    <documentation>
      Controls whether iterations in vocabulary entries listings are done
      using build-time tag c:forEach or render-time tag ui:repeat (which is much
      more efficient on large content).

      Using render-time iterations may break
      some behaviours, this property is mainly useful for backport of
      optimizations on maintenance branches.

      @since 9.3
    </documentation>
    <property name="nuxeo.jsf.vocabularies.useRepeatRenderTime">true</property>
  </extension>

</component>
