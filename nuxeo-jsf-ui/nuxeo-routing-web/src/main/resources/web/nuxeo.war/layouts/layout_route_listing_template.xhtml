<f:subview xmlns:c="http://java.sun.com/jstl/core"
  xmlns:f="http://java.sun.com/jsf/core"
  xmlns:h="http://java.sun.com/jsf/html"
  xmlns:nxl="http://nuxeo.org/nxforms/layout"
  xmlns:nxu="http://nuxeo.org/nxweb/util"
  xmlns:nxd="http://nuxeo.org/nxweb/document" id="#{layout.id}">

  <c:if test="false">
  Layout template applying to an item instance of SelectDataModel named "documents"

  Other needed parameters are:
  - provider: instance of a ResultProvider to handle sort
  - layoutListingStatus: iteration status, used to print table header
    matching widget label.

  This is a copy/paste from the original layout_listing_template.xhtml
  It allows to add columns to show the structure of a route.

  Since 5.8, removed selection and sort actions (see NXP-12435).
  </c:if>

  <c:if
    test="#{showListingHeader and layout.properties.showListingHeader}">

    <c:if
    test="#{layout.properties.showRouteLokingInfo}">
      <nxu:set var="isLocked" value="#{routingActions.isCurrentRouteLocked()}" cache="true">
      <div class="lockFile_block" id='lock_unlock_button'>
        <c:if test="#{isLocked}">
          <h:outputText value="#{messages['label.summary.locked.intro']} "/>
          <h:outputText class="summary_locked" value="#{messages['label.summary.locked']}"/>
          <c:if test="#{routingActions.canUnlockRoute()}">
            <h:outputText value=" | " />
            <h:commandLink value="#{messages['command.unlock']}"
              action="#{routingActions.unlockCurrentRoute()}" id="unlock_route"/>
          </c:if>
          <div class="lockDetail">
            <h:outputText value="#{messages['label.summary.by']} #{routingActions.getCurrentRouteLockDetails()['document.locker']}, "/>
            <h:outputText value="#{messages['label.summary.the']} #{routingActions.getCurrentRouteLockDetails()['document.lock.time']}"/>
          </div>
        </c:if>

        <c:if test="#{!isLocked}">
          <h:outputText value="#{messages['label.summary.locked.intro']} "/>
          <h:outputText class="summary_unlocked" value="#{messages['label.summary.unlocked']} "/>
          <c:if test="#{routingActions.canLockRoute()}" >
            <h:outputText value=" | " />
            <h:commandLink value="#{messages['command.lock']}"
              action="#{routingActions.lockCurrentRoute()}" id="lock_route"/>
          </c:if>
        </c:if>
      </div>
      </nxu:set>
    </c:if>

    <h:outputText value="#{messages['label.lifecycle']}: #{messages[currentDocument.currentLifeCycleState]}" />

    <thead>
      <tr>
        <nxl:layoutColumn>
          <c:choose>
            <c:when test="#{layoutColumnIndex == 0}">
              <c:if test="#{value.data.getRouteMaxDepth() > 0}">
                <th colspan="#{value.data.getRouteMaxDepth()}"></th>
              </c:if>
            </c:when>
            <c:otherwise>
              <th>
              <c:choose>
                <c:when test="#{layoutColumn.properties.isListingSelectionBox}">
                  <!-- removed checkboxes, see NXP-12435 -->
                </c:when>
                <c:when
                  test="#{layoutColumn.properties.isListingSelectionBoxWithCurrentDocument}">
                  <!-- removed checkboxes, see NXP-12435 -->
                </c:when>
                <c:when test="#{layoutColumn.properties.useFirstWidgetLabelAsColumnHeader}">
                  <c:if test="#{provider.sortable and !empty layoutColumn.properties.sortPropertyName}">
                    <!-- removed sort actions, see NXP-12435 -->
                  </c:if>
                  <h:outputText value="#{layoutColumn.widgets[0].label}"
                    rendered="#{!layoutColumn.widgets[0].translated}" />
                  <h:outputText value="#{messages[layoutColumn.widgets[0].label]}"
                    rendered="#{layoutColumn.widgets[0].translated}" />
                </c:when>
              </c:choose></th>
            </c:otherwise>
          </c:choose>
        </nxl:layoutColumn>
      </tr>
    </thead>
  </c:if>

  <c:set var="tdStyleClass"
    value="#{nxu:test(value.data.getDepth()%4 == 0, 'routeRowBackground0', nxu:test(value.data.getDepth()%4 == 1, 'routeRowBackground1', nxu:test(value.data.getDepth()%4 ==2, 'routeRowBackground2', nxu:test(value.data.getDepth()%4 ==3, 'routeRowBackground3', ''))))}" />
  <tr>
    <nxl:layoutColumn>
      <c:choose>
        <c:when test="#{layoutColumnIndex == 0}">
          <c:forEach var="folder"
            items="#{value.data.getFirstChildFolders()}">
            <c:set var="tdParentStyleClass"
              value="#{nxu:test((folder.depth)%4 ==0, 'routeRowBackground0', nxu:test((folder.depth)%4 == 1, 'routeRowBackground1', nxu:test((folder.depth)%4 ==2, 'routeRowBackground2', nxu:test((folder.depth)%4 ==3, 'routeRowBackground3', ''))))}" />
            <td class="cellVerticalBorder  #{tdParentStyleClass} " rowspan="#{folder.getTotalChildCount()}">
              <nxl:layoutColumnWidget>
                <nxl:widget widget="#{widget}" value="#{folder}" />
                <c:if
                  test="#{layoutColumn.size > 1 and layoutColumn.size > widgetIndex + 1}">
                  <br />
                </c:if>
              </nxl:layoutColumnWidget>
            </td>
          </c:forEach>
          <c:if
            test="#{(value.data.getRouteMaxDepth() - value.data.getDepth()) > 0}">
            <td colspan="#{value.data.getRouteMaxDepth() - value.data.getDepth()}" class=" #{tdStyleClass}"/>
          </c:if>
        </c:when>
        <c:otherwise>
          <td class="#{layoutColumn.properties.columnStyleClass}  #{tdStyleClass}"><nxl:layoutColumnWidget>
            <nxl:widget widget="#{widget}" value="#{value}" />
            <c:if
              test="#{layoutColumn.size > 1 and layoutColumn.size > widgetIndex + 1}">
              <br />
            </c:if>
          </nxl:layoutColumnWidget></td>
        </c:otherwise>
      </c:choose>
    </nxl:layoutColumn>
  </tr>

</f:subview>