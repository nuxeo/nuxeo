<#escape x as x?xml>
<?xml version="1.0"?>
<component name="org.nuxeo.elasticsearch.defaultConfig">
  <require>org.nuxeo.elasticsearch.ElasticSearchComponent</require>

<#if "${elasticsearch.addressList}" == "">
  <extension target="org.nuxeo.elasticsearch.ElasticSearchComponent" point="elasticSearchEmbeddedServer">
    <elasticSearchEmbeddedServer clusterName="${elasticsearch.clusterName}" nodeName="${elasticsearch.nodeName}"
      pathData="${nuxeo.data.dir}/elasticsearch" pathLogs="${nuxeo.log.dir}/elasticsearch"
      httpEnabled="${elasticsearch.httpEnabled}" networkHost="${elasticsearch.networkHost}" />
  </extension>
</#if>

  <extension target="org.nuxeo.elasticsearch.ElasticSearchComponent" point="elasticSearchClient">
<#if (elasticsearch.client)?? && "${elasticsearch.client}" == "RestClient">
    <elasticSearchClient class="org.nuxeo.elasticsearch.client.ESRestClientFactory">
      <option name="addressList">${elasticsearch.addressList}</option>
      <option name="connection.timeout.ms">${elasticsearch.restClient.connectionTimeoutMs}</option>
      <option name="socket.timeout.ms">${elasticsearch.restClient.socketTimeoutMs}</option>
      <option name="username">${elasticsearch.restClient.username}</option>
      <option name="password">${elasticsearch.restClient.password}</option>
      <option name="trustStorePath">${elasticsearch.restClient.truststore.path}</option>
      <option name="trustStorePassword">${elasticsearch.restClient.truststore.password}</option>
      <option name="trustStoreType">${elasticsearch.restClient.truststore.type}</option>
      <option name="keyStorePath">${elasticsearch.restClient.keystore.path}</option>
      <option name="keyStorePassword">${elasticsearch.restClient.keystore.password}</option>
      <option name="keyStoreType">${elasticsearch.restClient.keystore.type}</option>
      <!-- deprecated since 10.3, and actually referring to the trustStore -->
<#if (elasticsearch.restClient.keystorePath)?has_content>
      <option name="keystore.path">${elasticsearch.restClient.keystorePath}</option>
</#if>
<#if (elasticsearch.restClient.keystorePassword)?has_content>
      <option name="keystore.password">${elasticsearch.restClient.keystorePassword}</option>
</#if>
<#if (elasticsearch.restClient.keystoreType)?has_content>
      <option name="keystore.type">${elasticsearch.restClient.keystoreType}</option>
</#if>
    </elasticSearchClient>
<#else>
  <elasticSearchClient class="org.nuxeo.elasticsearch.client.ESTransportClientFactory">
    <option name="addressList">${elasticsearch.addressList}</option>
    <option name="clusterName">${elasticsearch.clusterName}</option>
    <option name="clientTransportSniff">false</option>
    <option name="clientTransportIgnoreClusterName">false</option>
    <option name="clientTransportPingTimeout">5s</option>
    <option name="clientTransportNodesSamplerInterval">5s</option>
  </elasticSearchClient>
</#if>
  </extension>

  <extension target="org.nuxeo.elasticsearch.ElasticSearchComponent"
    point="elasticSearchIndex">
    <elasticSearchIndex name="${elasticsearch.indexName}" type="doc" repository="default">
      <fetchFromSource>
        <include>ecm:*</include>
        <include>dc:*</include>
        <exclude>ecm:binarytext</exclude>
      </fetchFromSource>
      <settings file="elasticsearch-doc-settings.json" />
      <mapping file="elasticsearch-doc-mapping.json" />
    </elasticSearchIndex>
  </extension>

</component>
</#escape>
